{"changed":true,"filter":false,"title":"product_merchant.js","tooltip":"/public/frontend/js/product_merchant.js","value":"jQuery(document).ready(function() {\n\n    var $document = $(document);\n    $('#add-product').click(function(e) {\n\n        $('#product_form').validate({\n            rules: {},\n            invalidHandler: function(e, validator) {\n                if (validator.errorList.length)\n                    $('#myTab a[href=\"#' + jQuery(validator.errorList[0].element).closest(\".tab-pane\").attr('id') + '\"]').tab('show')\n            },\n            errorPlacement: function(error, element) {\n                var element_id = element.attr(\"id\");\n                if (element_id == \"fileInput\") {\n                    return error.insertAfter(element.parent().parent().parent());\n                }\n                else if (element_id == \"alphabet_letter\") {\n                    return error.insertAfter(element.next());\n                }\n                else {\n                    return error.insertAfter(element);\n                }\n            }\n        });\n        if ($('#product_form').valid()) {\n\n            for (instance in CKEDITOR.instances) {\n                CKEDITOR.instances[instance].updateElement();\n            }\n            e.preventDefault();\n            $('#product_form').ajaxSubmit(function(data) {\n                location.href = url_redirect;\n            });\n\n            //$('#product_form').submit();\n        }\n    });\n\n\n    if (jQuery('#product_list').length > 0) {\n        jQuery('#product_list').on('xhr.dt', function(e, settings, json, xhr) {\n                //console.log(xhr.responseText);\n            })\n            .DataTable({\n                \"processing\": true,\n                \"serverSide\": true,\n                \"ajax\": url_get_data_product,\n                \"responsive\": true,\n                \"bPaginate\": true,\n                \"bLengthChange\": true,\n                \"bFilter\": true,\n                \"bInfo\": true,\n                \"bAutoWidth\": false,\n                \"order\": [\n                    [6, \"desc\"]\n                ],\n                \"lengthMenu\": [20, 40, 60, 80, 100],\n                \"pageLength\": 20,\n                language: {\n                    paginate: {\n                        first: 'Premier',\n                        previous: 'Précédent',\n                        next: 'Suivant',\n                        last: 'Dernier'\n                    },\n                    \"lengthMenu\": \"Afficher _MENU_ entrées\",\n                    \"search\": \"Chercher:\",\n                    \"processing\": \"En traitement ...\",\n                    \"infoEmpty\": \"Aucune entrée à afficher\",\n                    \"info\": \"Afficher la page _PAGE_ de _PAGES_\"\n\n\n                },\n                columns: [\n                    { data: 'product_name', name: 'product_name', searchable: true, sortable: true },\n                    { data: 'serial_number', name: 'serial_number', searchable: true, sortable: true }, { data: 'original_price', name: 'original_price', searchable: true, sortable: true, visible: false },\n                    /*{ data: 'created_by', name: 'created_by', searchable: false, sortable: true },*/\n                    { data: 'brand', name: 'brand', searchable: true, sortable: true },\n                    { data: 'created_at', name: 'created_at', searchable: false, sortable: true, visible: false },\n                    /*{ data: 'modified_by', name: 'modified_by', searchable: false, sortable: true, visible: false }, { data: 'modified_at', name: 'modified_at', searchable: false, sortable: true, visible: false },*/\n                    { data: 'status', name: 'status', searchable: true, sortable: true },\n                    { data: 'action', name: 'action', searchable: false, sortable: false }\n                ],\n                fnDrawCallback: function() {\n                    var $paginate = this.siblings('.dataTables_paginate');\n\n                    if (this.api().data().length <= this.fnSettings()._iDisplayLength) {\n                        $paginate.hide();\n                    }\n                    else {\n                        $paginate.show();\n                    }\n                }\n\n            });\n    }\n\n\n    if (jQuery('.dataTables_filter').length > 0) {\n        jQuery('.dataTables_filter').find('input').addClass('form-control')\n    }\n\n    $('.product-image-id').click(function() {\n        var img_div = $(this).parent().parent();\n        var image_id = $(this).attr('data-id');\n        $('#confirm').modal({ backdrop: 'static', keyboard: false })\n            .one('click', '#delete', function() {\n                $.ajax({\n                    method: 'post',\n                    data: { image_id: image_id },\n                    url: url_remove_image,\n                    success: function(data) {\n                        if (data.success) {\n                            img_div.remove();\n                        }\n                        $.show_notification(data.message)\n                        setTimeout(function() {\n                            $('.notification_area').fadeOut('slow');\n                        }, 3000);\n                    }\n                })\n            });\n    });\n\n\n\n\n\n\n\n    /*\n        if ($(\"#product_media\").length > 0) {\n            Dropzone.autoDiscover = false;\n\n            var myDropzone = new Dropzone(\"#product_media\", {\n                autoProcessQueue: true,\n                parallelUploads:1,\n                url: base_url + \"marchand/produit/upload\",\n                addRemoveLinks: true,\n                acceptedFiles: 'image/!*',\n                init: function () {\n                    var myDropzone = this;\n                    this.on(\"removedfile\", function (file) {\n                        $.ajax({\n                            type: \"POST\",\n                            url: base_url + 'admin/remove-product-image',\n                            data: \"image_name=\" + file.name,\n                            beforeSend: function () {\n                            },\n                            complete: function (response) {\n                            }\n                        });\n                        $.post(\"delete-file.php?id=\" + file.serverId);\n\n                    });\n                    if (typeof product_images != 'undefined') {\n                        var images = $.parseJSON(product_images);\n                        $.each(images, function (key, value) {\n                            var mockFile = {name: value.name, size: value.size};\n                            myDropzone.emit(\"addedfile\", mockFile);\n                            myDropzone.emit(\"thumbnail\", mockFile, base_url + \"upload/produit/\" + value.name);\n                            myDropzone.createThumbnailFromUrl(mockFile, base_url + \"upload/produit/\" + value.name, function () {\n                                myDropzone.emit(\"complete\", mockFile);\n                            });\n                        });\n                    }\n                }\n            });\n        }\n    */\n    \n    console.log(\"ici pas de bug \"); \n    $document.on('keyup keypress change', \"#en_product_name\", function(e) {\n        console.log(\"Nous devons faire une autocompletion \");\n        var clone_text = $(\"#fr_product_name\").val();\n        clone_text = $.trim(clone_text);\n        clone_text = normalize_string(clone_text);\n        clone_text = clone_text.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-').replace(/\\_/g, '');\n        $(\"#product_url\").val(clone_text);\n    });\n\n\n\n    $('[data-toggle=\"tabajax\"]').click(function(e) {\n        var selected_attribute_set_id = $document.find('#attribute_set_ :selected').val();\n        var old_attribute_set_id = $document.find(\"input[name='old_attribute_set_id']\").val();\n        var product_id = $document.find(\"input[name='product_id']\").val();\n\n        var $this = $(this),\n            loadurl = $this.attr('href'),\n            targ = $this.attr('data-target');\n        if (selected_attribute_set_id != old_attribute_set_id || old_attribute_set_id == '') {\n            $.ajax({\n                type: \"GET\",\n                url: loadurl,\n                data: \"attribute_set_id=\" + selected_attribute_set_id + \"&product_id=\" + product_id,\n                complete: function(data) {\n                    $(targ).html(data.responseText);\n                    $document.find(\".select2\").select2();\n                    $document.find(\"input[name='old_attribute_set_id']\").val(selected_attribute_set_id)\n                },\n                success: function(data) {\n                   // console.log(\"data in succes : \" + data);\n                },\n                error: function(xhr) {\n                    //console.log(xhr.responseText);\n                }\n            });\n\n        }\n        $this.tab('show');\n        return false;\n    });\n\n    jQuery.fn.extend({\n        propAttr: $.fn.prop || $.fn.attr\n    });\n\n    if ($(\"#category\").length > 0) {\n        var selected_categories = $.parseJSON(selected_category);\n        $(\"#category\").dynatree({\n            checkbox: true,\n            selectMode: 2,\n            children: $.parseJSON(category_tree_data),\n            onSelect: function(select, node) {\n                // Display list of selected nodes\n                var selNodes = node.tree.getSelectedNodes();\n                var selected_category = $.map(selNodes, function(node) {\n                    return node.data.key;\n                });\n                $(\"#category_id\").val(selected_category.join(\", \"));\n            },\n            onClick: function(node, event) {\n                // We should not toggle, if target was \"checkbox\", because this\n                // would result in double-toggle (i.e. no toggle)\n                if (node.getEventTargetType(event) == \"title\")\n                    node.toggleSelect();\n            },\n            onKeydown: function(node, event) {\n                if (event.which == 32) {\n                    node.toggleSelect();\n                    return false;\n                }\n            }\n        });\n        $(\"#category\").dynatree(\"getRoot\").visit(function(node) {\n            node.expand(false);\n        });\n        console.log(selected_categories);\n        $(\"#category\").dynatree(\"getRoot\").visit(function(node) {\n            if ($.inArray(parseInt(node.data.key), selected_categories) !== -1) {\n                node.select(true);\n            }\n        });\n    }\n\n    $document.on(\"click\", \".search-box-remove\", function() {\n        var removable_tag = $(this).parent('li').attr('id');\n        var product_tag = $document.find('#product_tag').val();\n        var tag_arr = (product_tag != \"\") ? product_tag.split(',') : [];\n        tag_arr.splice($.inArray(removable_tag, tag_arr), 1);\n        $document.find('#product_tag').val(tag_arr.join(','));\n        $(this).parent('li').remove();\n    });\n\n    $document.on('click', '.add_option', function() {\n        var row_count = parseInt($('.option_row:last').attr('id'));\n        var row_index = row_count + 1;\n        var input_type = $document.find('#input_type :selected').val();\n        var html_data = $document.find('.master-option-container').clone();\n        html_data.removeClass('master-option-container hidden').prop('id', row_index);\n        html_data.find('.option_name input').attr('name', 'videos[' + row_index + '][name]');\n        console.log($(html_data).html());\n        if (input_type == 1) {\n            html_data.find('.option_value').remove();\n            html_data.find('.color_picker').removeClass('hidden');\n            html_data.find('.color_picker input').attr('name', 'videos[' + row_index + '][value]');\n        }\n        else {\n            html_data.find('.color_picker').remove();\n            html_data.find('.option_value input').attr('name', 'videos[' + row_index + '][value]');\n        }\n        // html_data.find('.option_value input').attr('name','attribute[option_value]['+row_index+']');\n        html_data.find('.button :button').removeClass('btn-primary add_option').addClass('btn-danger remove_option').text('Remove Option');\n        $(html_data).hide().appendTo(\"#tab_4\").animate({\n            height: 'toggle'\n        }, 500);\n    });\n\n    $document.on('click', '.remove_option', function() {\n        $(this).parents('.form-group').remove();\n    });\n\n\n    if ($(\"#uploader\").length > 0) {\n        $(\"#uploader\").pluploadQueue({\n            // General settings\n            runtimes: 'html5,flash,silverlight,html4',\n            url: url_upload_image,\n            rename: true,\n            dragdrop: true,\n\n            filters: {\n                // Maximum file size\n                max_file_size: '10mb',\n                // Specify what files to browse for\n                mime_types: [\n                    { title: \"Image files\", extensions: \"jpg,gif,png\" },\n                ]\n            },\n\n            flash_swf_url: '../../js/Moxie.swf',\n            silverlight_xap_url: '../../js/Moxie.xap',\n            multiple_queues: true,  \n            init: {\n                FilesAdded: function(up, file) {},\n                FileUploaded: function(up, file, info) {\n                    console.log(\"fdujlrerere\");\n                    var return_data = $.parseJSON(info.response);\n                    console.log(return_data);\n                    if (return_data.success) {\n                        var image_url = base_url + \"upload/product/\" + return_data.image_name;\n                        var html = `<tr>\n                                                            <td><img src=` + image_url + ` width=\"100\" height=\"100\"></td>\n                                                            <td>\n                                                                <input type=\"text\" name=\"image_title[]\" value=\"\" class=\"\" style=\"width: 100%\">\n                                                            </td>\n                                                            <td>\n                                                                <input type=\"text\" name=\"image_alt[]\" value=\"\" class=\"\" style=\"width: 100%\">\n                                                            </td>\n                                                            <td>\n                                                                <input type=\"text\" name=\"image_sort_order[]\" value=\"\" class=\"\" style=\"width: 100%\">\n                                                            </td>\n                                                            <td>\n                                                                <a href=\"javascript://\" class=\"btn delete-image btn-default btn-sm\" title=\"Delete\" data-product_image_id=\"\" data-image_name=\"` + return_data.image_name + `\"><i class=\"fa fa-fw fa-trash\"></i></a>\n                                                            </td>\n                                                        </tr>\n\n                                    `;\n\n                        $(\"#image_list\").find('tbody').append(html);\n\n                    }\n                },\n                FilesRemoved: function(up, files) {},\n                UploadComplete: function() {},\n                Error: function(up, error) {\n                    console.log(\"A error is passing\");\n                    console.log(error.response);\n                }\n            },\n        });\n    }\n\n    $document.on('click', '.delete-image', function() {\n        var tr = $(this).parents('tr');\n        var data = $(this).data();\n        $.ajax({\n            type: \"GET\",\n            url: url_remove_image,\n            data: \"image_name=\" + data.image_name + \"&product_image_id=\" + data.product_image_id,\n            beforeSend: function() {},\n            complete: function(response) {\n                console.log(response);\n                tr.remove();\n            },\n            error: function(xhr) {\n                console.log(xhr.responseText);\n            }\n        });\n\n    });\n\n    $(\"#product-search-btn\").click(function(e) {\n        e.preventDefault();\n        var keyword = $('#product-search').val();\n        var type = $(this).data('type');\n        $.ajax({\n            type: \"POST\",\n            url: url_search_product,\n            data: { 'keyword': keyword },\n            beforeSend: function() {\n                $.show_notification();\n            },\n            success: function(msg) {\n                if (type == 'add') {\n                    $(\".table-body\").html($(msg).find(\".product-list\").html());\n                }\n                else {\n                    $(\".table-body\").append($(msg).find(\".product-list\").html());\n                }\n                $.hide_notification();\n            },\n            error: function(xhr, status, error) {\n                console.log(xhr.responseText);\n            }\n        });\n        return false;\n    })\n\n    $document.on('click', '.product-tag-close', function() {\n        var $this = $(this);\n        var removable_tag = $(this).parent('button').attr('id');\n        $.ajax({\n            type: \"POST\",\n            data: \"tag=\" + removable_tag,\n            url: url_remove_product_tag,\n            success: function(data) {\n                $document.find(\".tag-autocomplete ul li\").each(function() {\n                    if ($(this).attr('id') == removable_tag) {\n                        $(this).find('.search-box-remove').trigger('click');\n                    }\n                });\n                $this.parent('button').remove();\n            }\n        });\n    })\n\n\n\n    $('#exportCSV').click(function exportTo(csv) {\n        $('.table').tableExport({\n            filename: 'Product_list_%DD%-%MM%-%YY%'\n        });\n    })\n\n\n});\n","undoManager":{"mark":-2,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":365,"scrollleft":0,"selection":{"start":{"row":46,"column":24},"end":{"row":46,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":45,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1529075691439}